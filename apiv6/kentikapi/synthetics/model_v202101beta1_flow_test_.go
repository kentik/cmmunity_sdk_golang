/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1FlowTest struct for V202101beta1FlowTest
type V202101beta1FlowTest struct {
	Target                      *string `json:"target,omitempty"`
	TargetRefreshIntervalMillis *int64  `json:"targetRefreshIntervalMillis,omitempty"`
	MaxTasks                    *int64  `json:"maxTasks,omitempty"`
	Type                        *string `json:"type,omitempty"`
}

// NewV202101beta1FlowTest instantiates a new V202101beta1FlowTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1FlowTest() *V202101beta1FlowTest {
	this := V202101beta1FlowTest{}
	return &this
}

// NewV202101beta1FlowTestWithDefaults instantiates a new V202101beta1FlowTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1FlowTestWithDefaults() *V202101beta1FlowTest {
	this := V202101beta1FlowTest{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V202101beta1FlowTest) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1FlowTest) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V202101beta1FlowTest) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *V202101beta1FlowTest) SetTarget(v string) {
	o.Target = &v
}

// GetTargetRefreshIntervalMillis returns the TargetRefreshIntervalMillis field value if set, zero value otherwise.
func (o *V202101beta1FlowTest) GetTargetRefreshIntervalMillis() int64 {
	if o == nil || o.TargetRefreshIntervalMillis == nil {
		var ret int64
		return ret
	}
	return *o.TargetRefreshIntervalMillis
}

// GetTargetRefreshIntervalMillisOk returns a tuple with the TargetRefreshIntervalMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1FlowTest) GetTargetRefreshIntervalMillisOk() (*int64, bool) {
	if o == nil || o.TargetRefreshIntervalMillis == nil {
		return nil, false
	}
	return o.TargetRefreshIntervalMillis, true
}

// HasTargetRefreshIntervalMillis returns a boolean if a field has been set.
func (o *V202101beta1FlowTest) HasTargetRefreshIntervalMillis() bool {
	if o != nil && o.TargetRefreshIntervalMillis != nil {
		return true
	}

	return false
}

// SetTargetRefreshIntervalMillis gets a reference to the given int64 and assigns it to the TargetRefreshIntervalMillis field.
func (o *V202101beta1FlowTest) SetTargetRefreshIntervalMillis(v int64) {
	o.TargetRefreshIntervalMillis = &v
}

// GetMaxTasks returns the MaxTasks field value if set, zero value otherwise.
func (o *V202101beta1FlowTest) GetMaxTasks() int64 {
	if o == nil || o.MaxTasks == nil {
		var ret int64
		return ret
	}
	return *o.MaxTasks
}

// GetMaxTasksOk returns a tuple with the MaxTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1FlowTest) GetMaxTasksOk() (*int64, bool) {
	if o == nil || o.MaxTasks == nil {
		return nil, false
	}
	return o.MaxTasks, true
}

// HasMaxTasks returns a boolean if a field has been set.
func (o *V202101beta1FlowTest) HasMaxTasks() bool {
	if o != nil && o.MaxTasks != nil {
		return true
	}

	return false
}

// SetMaxTasks gets a reference to the given int64 and assigns it to the MaxTasks field.
func (o *V202101beta1FlowTest) SetMaxTasks(v int64) {
	o.MaxTasks = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V202101beta1FlowTest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1FlowTest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V202101beta1FlowTest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V202101beta1FlowTest) SetType(v string) {
	o.Type = &v
}

func (o V202101beta1FlowTest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.TargetRefreshIntervalMillis != nil {
		toSerialize["targetRefreshIntervalMillis"] = o.TargetRefreshIntervalMillis
	}
	if o.MaxTasks != nil {
		toSerialize["maxTasks"] = o.MaxTasks
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1FlowTest struct {
	value *V202101beta1FlowTest
	isSet bool
}

func (v NullableV202101beta1FlowTest) Get() *V202101beta1FlowTest {
	return v.value
}

func (v *NullableV202101beta1FlowTest) Set(val *V202101beta1FlowTest) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1FlowTest) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1FlowTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1FlowTest(val *V202101beta1FlowTest) *NullableV202101beta1FlowTest {
	return &NullableV202101beta1FlowTest{value: val, isSet: true}
}

func (v NullableV202101beta1FlowTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1FlowTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
