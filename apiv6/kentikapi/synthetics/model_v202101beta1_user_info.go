/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1UserInfo struct for V202101beta1UserInfo
type V202101beta1UserInfo struct {
	Id       *string `json:"id,omitempty"`
	Email    *string `json:"email,omitempty"`
	FullName *string `json:"fullName,omitempty"`
}

// NewV202101beta1UserInfo instantiates a new V202101beta1UserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1UserInfo() *V202101beta1UserInfo {
	this := V202101beta1UserInfo{}
	return &this
}

// NewV202101beta1UserInfoWithDefaults instantiates a new V202101beta1UserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1UserInfoWithDefaults() *V202101beta1UserInfo {
	this := V202101beta1UserInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V202101beta1UserInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1UserInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V202101beta1UserInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V202101beta1UserInfo) SetId(v string) {
	o.Id = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *V202101beta1UserInfo) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1UserInfo) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *V202101beta1UserInfo) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *V202101beta1UserInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *V202101beta1UserInfo) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1UserInfo) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *V202101beta1UserInfo) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *V202101beta1UserInfo) SetFullName(v string) {
	o.FullName = &v
}

func (o V202101beta1UserInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1UserInfo struct {
	value *V202101beta1UserInfo
	isSet bool
}

func (v NullableV202101beta1UserInfo) Get() *V202101beta1UserInfo {
	return v.value
}

func (v *NullableV202101beta1UserInfo) Set(val *V202101beta1UserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1UserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1UserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1UserInfo(val *V202101beta1UserInfo) *NullableV202101beta1UserInfo {
	return &NullableV202101beta1UserInfo{value: val, isSet: true}
}

func (v NullableV202101beta1UserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1UserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
