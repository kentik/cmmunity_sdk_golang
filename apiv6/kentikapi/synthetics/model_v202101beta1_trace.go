/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1Trace struct for V202101beta1Trace
type V202101beta1Trace struct {
	Hops   *[]V202101beta1TraceHop `json:"hops,omitempty"`
	Target *string                 `json:"target,omitempty"`
	Ips    *[]string               `json:"ips,omitempty"`
}

// NewV202101beta1Trace instantiates a new V202101beta1Trace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1Trace() *V202101beta1Trace {
	this := V202101beta1Trace{}
	return &this
}

// NewV202101beta1TraceWithDefaults instantiates a new V202101beta1Trace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1TraceWithDefaults() *V202101beta1Trace {
	this := V202101beta1Trace{}
	return &this
}

// GetHops returns the Hops field value if set, zero value otherwise.
func (o *V202101beta1Trace) GetHops() []V202101beta1TraceHop {
	if o == nil || o.Hops == nil {
		var ret []V202101beta1TraceHop
		return ret
	}
	return *o.Hops
}

// GetHopsOk returns a tuple with the Hops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1Trace) GetHopsOk() (*[]V202101beta1TraceHop, bool) {
	if o == nil || o.Hops == nil {
		return nil, false
	}
	return o.Hops, true
}

// HasHops returns a boolean if a field has been set.
func (o *V202101beta1Trace) HasHops() bool {
	if o != nil && o.Hops != nil {
		return true
	}

	return false
}

// SetHops gets a reference to the given []V202101beta1TraceHop and assigns it to the Hops field.
func (o *V202101beta1Trace) SetHops(v []V202101beta1TraceHop) {
	o.Hops = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V202101beta1Trace) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1Trace) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V202101beta1Trace) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *V202101beta1Trace) SetTarget(v string) {
	o.Target = &v
}

// GetIps returns the Ips field value if set, zero value otherwise.
func (o *V202101beta1Trace) GetIps() []string {
	if o == nil || o.Ips == nil {
		var ret []string
		return ret
	}
	return *o.Ips
}

// GetIpsOk returns a tuple with the Ips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1Trace) GetIpsOk() (*[]string, bool) {
	if o == nil || o.Ips == nil {
		return nil, false
	}
	return o.Ips, true
}

// HasIps returns a boolean if a field has been set.
func (o *V202101beta1Trace) HasIps() bool {
	if o != nil && o.Ips != nil {
		return true
	}

	return false
}

// SetIps gets a reference to the given []string and assigns it to the Ips field.
func (o *V202101beta1Trace) SetIps(v []string) {
	o.Ips = &v
}

func (o V202101beta1Trace) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hops != nil {
		toSerialize["hops"] = o.Hops
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Ips != nil {
		toSerialize["ips"] = o.Ips
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1Trace struct {
	value *V202101beta1Trace
	isSet bool
}

func (v NullableV202101beta1Trace) Get() *V202101beta1Trace {
	return v.value
}

func (v *NullableV202101beta1Trace) Set(val *V202101beta1Trace) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1Trace) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1Trace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1Trace(val *V202101beta1Trace) *NullableV202101beta1Trace {
	return &NullableV202101beta1Trace{value: val, isSet: true}
}

func (v NullableV202101beta1Trace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1Trace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
