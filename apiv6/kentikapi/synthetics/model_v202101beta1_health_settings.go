/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1HealthSettings struct for V202101beta1HealthSettings
type V202101beta1HealthSettings struct {
	LatencyCritical     *float32 `json:"latencyCritical,omitempty"`
	LatencyWarning      *float32 `json:"latencyWarning,omitempty"`
	PacketLossCritical  *float32 `json:"packetLossCritical,omitempty"`
	PacketLossWarning   *float32 `json:"packetLossWarning,omitempty"`
	JitterCritical      *float32 `json:"jitterCritical,omitempty"`
	JitterWarning       *float32 `json:"jitterWarning,omitempty"`
	HttpLatencyCritical *float32 `json:"httpLatencyCritical,omitempty"`
	HttpLatencyWarning  *float32 `json:"httpLatencyWarning,omitempty"`
	HttpValidCodes      *[]int64 `json:"httpValidCodes,omitempty"`
	DnsValidCodes       *[]int64 `json:"dnsValidCodes,omitempty"`
}

// NewV202101beta1HealthSettings instantiates a new V202101beta1HealthSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1HealthSettings() *V202101beta1HealthSettings {
	this := V202101beta1HealthSettings{}
	return &this
}

// NewV202101beta1HealthSettingsWithDefaults instantiates a new V202101beta1HealthSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1HealthSettingsWithDefaults() *V202101beta1HealthSettings {
	this := V202101beta1HealthSettings{}
	return &this
}

// GetLatencyCritical returns the LatencyCritical field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetLatencyCritical() float32 {
	if o == nil || o.LatencyCritical == nil {
		var ret float32
		return ret
	}
	return *o.LatencyCritical
}

// GetLatencyCriticalOk returns a tuple with the LatencyCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetLatencyCriticalOk() (*float32, bool) {
	if o == nil || o.LatencyCritical == nil {
		return nil, false
	}
	return o.LatencyCritical, true
}

// HasLatencyCritical returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasLatencyCritical() bool {
	if o != nil && o.LatencyCritical != nil {
		return true
	}

	return false
}

// SetLatencyCritical gets a reference to the given float32 and assigns it to the LatencyCritical field.
func (o *V202101beta1HealthSettings) SetLatencyCritical(v float32) {
	o.LatencyCritical = &v
}

// GetLatencyWarning returns the LatencyWarning field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetLatencyWarning() float32 {
	if o == nil || o.LatencyWarning == nil {
		var ret float32
		return ret
	}
	return *o.LatencyWarning
}

// GetLatencyWarningOk returns a tuple with the LatencyWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetLatencyWarningOk() (*float32, bool) {
	if o == nil || o.LatencyWarning == nil {
		return nil, false
	}
	return o.LatencyWarning, true
}

// HasLatencyWarning returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasLatencyWarning() bool {
	if o != nil && o.LatencyWarning != nil {
		return true
	}

	return false
}

// SetLatencyWarning gets a reference to the given float32 and assigns it to the LatencyWarning field.
func (o *V202101beta1HealthSettings) SetLatencyWarning(v float32) {
	o.LatencyWarning = &v
}

// GetPacketLossCritical returns the PacketLossCritical field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetPacketLossCritical() float32 {
	if o == nil || o.PacketLossCritical == nil {
		var ret float32
		return ret
	}
	return *o.PacketLossCritical
}

// GetPacketLossCriticalOk returns a tuple with the PacketLossCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetPacketLossCriticalOk() (*float32, bool) {
	if o == nil || o.PacketLossCritical == nil {
		return nil, false
	}
	return o.PacketLossCritical, true
}

// HasPacketLossCritical returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasPacketLossCritical() bool {
	if o != nil && o.PacketLossCritical != nil {
		return true
	}

	return false
}

// SetPacketLossCritical gets a reference to the given float32 and assigns it to the PacketLossCritical field.
func (o *V202101beta1HealthSettings) SetPacketLossCritical(v float32) {
	o.PacketLossCritical = &v
}

// GetPacketLossWarning returns the PacketLossWarning field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetPacketLossWarning() float32 {
	if o == nil || o.PacketLossWarning == nil {
		var ret float32
		return ret
	}
	return *o.PacketLossWarning
}

// GetPacketLossWarningOk returns a tuple with the PacketLossWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetPacketLossWarningOk() (*float32, bool) {
	if o == nil || o.PacketLossWarning == nil {
		return nil, false
	}
	return o.PacketLossWarning, true
}

// HasPacketLossWarning returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasPacketLossWarning() bool {
	if o != nil && o.PacketLossWarning != nil {
		return true
	}

	return false
}

// SetPacketLossWarning gets a reference to the given float32 and assigns it to the PacketLossWarning field.
func (o *V202101beta1HealthSettings) SetPacketLossWarning(v float32) {
	o.PacketLossWarning = &v
}

// GetJitterCritical returns the JitterCritical field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetJitterCritical() float32 {
	if o == nil || o.JitterCritical == nil {
		var ret float32
		return ret
	}
	return *o.JitterCritical
}

// GetJitterCriticalOk returns a tuple with the JitterCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetJitterCriticalOk() (*float32, bool) {
	if o == nil || o.JitterCritical == nil {
		return nil, false
	}
	return o.JitterCritical, true
}

// HasJitterCritical returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasJitterCritical() bool {
	if o != nil && o.JitterCritical != nil {
		return true
	}

	return false
}

// SetJitterCritical gets a reference to the given float32 and assigns it to the JitterCritical field.
func (o *V202101beta1HealthSettings) SetJitterCritical(v float32) {
	o.JitterCritical = &v
}

// GetJitterWarning returns the JitterWarning field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetJitterWarning() float32 {
	if o == nil || o.JitterWarning == nil {
		var ret float32
		return ret
	}
	return *o.JitterWarning
}

// GetJitterWarningOk returns a tuple with the JitterWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetJitterWarningOk() (*float32, bool) {
	if o == nil || o.JitterWarning == nil {
		return nil, false
	}
	return o.JitterWarning, true
}

// HasJitterWarning returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasJitterWarning() bool {
	if o != nil && o.JitterWarning != nil {
		return true
	}

	return false
}

// SetJitterWarning gets a reference to the given float32 and assigns it to the JitterWarning field.
func (o *V202101beta1HealthSettings) SetJitterWarning(v float32) {
	o.JitterWarning = &v
}

// GetHttpLatencyCritical returns the HttpLatencyCritical field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetHttpLatencyCritical() float32 {
	if o == nil || o.HttpLatencyCritical == nil {
		var ret float32
		return ret
	}
	return *o.HttpLatencyCritical
}

// GetHttpLatencyCriticalOk returns a tuple with the HttpLatencyCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetHttpLatencyCriticalOk() (*float32, bool) {
	if o == nil || o.HttpLatencyCritical == nil {
		return nil, false
	}
	return o.HttpLatencyCritical, true
}

// HasHttpLatencyCritical returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasHttpLatencyCritical() bool {
	if o != nil && o.HttpLatencyCritical != nil {
		return true
	}

	return false
}

// SetHttpLatencyCritical gets a reference to the given float32 and assigns it to the HttpLatencyCritical field.
func (o *V202101beta1HealthSettings) SetHttpLatencyCritical(v float32) {
	o.HttpLatencyCritical = &v
}

// GetHttpLatencyWarning returns the HttpLatencyWarning field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetHttpLatencyWarning() float32 {
	if o == nil || o.HttpLatencyWarning == nil {
		var ret float32
		return ret
	}
	return *o.HttpLatencyWarning
}

// GetHttpLatencyWarningOk returns a tuple with the HttpLatencyWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetHttpLatencyWarningOk() (*float32, bool) {
	if o == nil || o.HttpLatencyWarning == nil {
		return nil, false
	}
	return o.HttpLatencyWarning, true
}

// HasHttpLatencyWarning returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasHttpLatencyWarning() bool {
	if o != nil && o.HttpLatencyWarning != nil {
		return true
	}

	return false
}

// SetHttpLatencyWarning gets a reference to the given float32 and assigns it to the HttpLatencyWarning field.
func (o *V202101beta1HealthSettings) SetHttpLatencyWarning(v float32) {
	o.HttpLatencyWarning = &v
}

// GetHttpValidCodes returns the HttpValidCodes field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetHttpValidCodes() []int64 {
	if o == nil || o.HttpValidCodes == nil {
		var ret []int64
		return ret
	}
	return *o.HttpValidCodes
}

// GetHttpValidCodesOk returns a tuple with the HttpValidCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetHttpValidCodesOk() (*[]int64, bool) {
	if o == nil || o.HttpValidCodes == nil {
		return nil, false
	}
	return o.HttpValidCodes, true
}

// HasHttpValidCodes returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasHttpValidCodes() bool {
	if o != nil && o.HttpValidCodes != nil {
		return true
	}

	return false
}

// SetHttpValidCodes gets a reference to the given []int64 and assigns it to the HttpValidCodes field.
func (o *V202101beta1HealthSettings) SetHttpValidCodes(v []int64) {
	o.HttpValidCodes = &v
}

// GetDnsValidCodes returns the DnsValidCodes field value if set, zero value otherwise.
func (o *V202101beta1HealthSettings) GetDnsValidCodes() []int64 {
	if o == nil || o.DnsValidCodes == nil {
		var ret []int64
		return ret
	}
	return *o.DnsValidCodes
}

// GetDnsValidCodesOk returns a tuple with the DnsValidCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HealthSettings) GetDnsValidCodesOk() (*[]int64, bool) {
	if o == nil || o.DnsValidCodes == nil {
		return nil, false
	}
	return o.DnsValidCodes, true
}

// HasDnsValidCodes returns a boolean if a field has been set.
func (o *V202101beta1HealthSettings) HasDnsValidCodes() bool {
	if o != nil && o.DnsValidCodes != nil {
		return true
	}

	return false
}

// SetDnsValidCodes gets a reference to the given []int64 and assigns it to the DnsValidCodes field.
func (o *V202101beta1HealthSettings) SetDnsValidCodes(v []int64) {
	o.DnsValidCodes = &v
}

func (o V202101beta1HealthSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LatencyCritical != nil {
		toSerialize["latencyCritical"] = o.LatencyCritical
	}
	if o.LatencyWarning != nil {
		toSerialize["latencyWarning"] = o.LatencyWarning
	}
	if o.PacketLossCritical != nil {
		toSerialize["packetLossCritical"] = o.PacketLossCritical
	}
	if o.PacketLossWarning != nil {
		toSerialize["packetLossWarning"] = o.PacketLossWarning
	}
	if o.JitterCritical != nil {
		toSerialize["jitterCritical"] = o.JitterCritical
	}
	if o.JitterWarning != nil {
		toSerialize["jitterWarning"] = o.JitterWarning
	}
	if o.HttpLatencyCritical != nil {
		toSerialize["httpLatencyCritical"] = o.HttpLatencyCritical
	}
	if o.HttpLatencyWarning != nil {
		toSerialize["httpLatencyWarning"] = o.HttpLatencyWarning
	}
	if o.HttpValidCodes != nil {
		toSerialize["httpValidCodes"] = o.HttpValidCodes
	}
	if o.DnsValidCodes != nil {
		toSerialize["dnsValidCodes"] = o.DnsValidCodes
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1HealthSettings struct {
	value *V202101beta1HealthSettings
	isSet bool
}

func (v NullableV202101beta1HealthSettings) Get() *V202101beta1HealthSettings {
	return v.value
}

func (v *NullableV202101beta1HealthSettings) Set(val *V202101beta1HealthSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1HealthSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1HealthSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1HealthSettings(val *V202101beta1HealthSettings) *NullableV202101beta1HealthSettings {
	return &NullableV202101beta1HealthSettings{value: val, isSet: true}
}

func (v NullableV202101beta1HealthSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1HealthSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
