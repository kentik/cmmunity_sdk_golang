/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1TaskHealth struct for V202101beta1TaskHealth
type V202101beta1TaskHealth struct {
	Task          *V202101beta1Task          `json:"task,omitempty"`
	Agents        *[]V202101beta1AgentHealth `json:"agents,omitempty"`
	OverallHealth *V202101beta1Health        `json:"overallHealth,omitempty"`
	TargetAgent   *V202101beta1Agent         `json:"targetAgent,omitempty"`
}

// NewV202101beta1TaskHealth instantiates a new V202101beta1TaskHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1TaskHealth() *V202101beta1TaskHealth {
	this := V202101beta1TaskHealth{}
	return &this
}

// NewV202101beta1TaskHealthWithDefaults instantiates a new V202101beta1TaskHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1TaskHealthWithDefaults() *V202101beta1TaskHealth {
	this := V202101beta1TaskHealth{}
	return &this
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *V202101beta1TaskHealth) GetTask() V202101beta1Task {
	if o == nil || o.Task == nil {
		var ret V202101beta1Task
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TaskHealth) GetTaskOk() (*V202101beta1Task, bool) {
	if o == nil || o.Task == nil {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *V202101beta1TaskHealth) HasTask() bool {
	if o != nil && o.Task != nil {
		return true
	}

	return false
}

// SetTask gets a reference to the given V202101beta1Task and assigns it to the Task field.
func (o *V202101beta1TaskHealth) SetTask(v V202101beta1Task) {
	o.Task = &v
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *V202101beta1TaskHealth) GetAgents() []V202101beta1AgentHealth {
	if o == nil || o.Agents == nil {
		var ret []V202101beta1AgentHealth
		return ret
	}
	return *o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TaskHealth) GetAgentsOk() (*[]V202101beta1AgentHealth, bool) {
	if o == nil || o.Agents == nil {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *V202101beta1TaskHealth) HasAgents() bool {
	if o != nil && o.Agents != nil {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []V202101beta1AgentHealth and assigns it to the Agents field.
func (o *V202101beta1TaskHealth) SetAgents(v []V202101beta1AgentHealth) {
	o.Agents = &v
}

// GetOverallHealth returns the OverallHealth field value if set, zero value otherwise.
func (o *V202101beta1TaskHealth) GetOverallHealth() V202101beta1Health {
	if o == nil || o.OverallHealth == nil {
		var ret V202101beta1Health
		return ret
	}
	return *o.OverallHealth
}

// GetOverallHealthOk returns a tuple with the OverallHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TaskHealth) GetOverallHealthOk() (*V202101beta1Health, bool) {
	if o == nil || o.OverallHealth == nil {
		return nil, false
	}
	return o.OverallHealth, true
}

// HasOverallHealth returns a boolean if a field has been set.
func (o *V202101beta1TaskHealth) HasOverallHealth() bool {
	if o != nil && o.OverallHealth != nil {
		return true
	}

	return false
}

// SetOverallHealth gets a reference to the given V202101beta1Health and assigns it to the OverallHealth field.
func (o *V202101beta1TaskHealth) SetOverallHealth(v V202101beta1Health) {
	o.OverallHealth = &v
}

// GetTargetAgent returns the TargetAgent field value if set, zero value otherwise.
func (o *V202101beta1TaskHealth) GetTargetAgent() V202101beta1Agent {
	if o == nil || o.TargetAgent == nil {
		var ret V202101beta1Agent
		return ret
	}
	return *o.TargetAgent
}

// GetTargetAgentOk returns a tuple with the TargetAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TaskHealth) GetTargetAgentOk() (*V202101beta1Agent, bool) {
	if o == nil || o.TargetAgent == nil {
		return nil, false
	}
	return o.TargetAgent, true
}

// HasTargetAgent returns a boolean if a field has been set.
func (o *V202101beta1TaskHealth) HasTargetAgent() bool {
	if o != nil && o.TargetAgent != nil {
		return true
	}

	return false
}

// SetTargetAgent gets a reference to the given V202101beta1Agent and assigns it to the TargetAgent field.
func (o *V202101beta1TaskHealth) SetTargetAgent(v V202101beta1Agent) {
	o.TargetAgent = &v
}

func (o V202101beta1TaskHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Task != nil {
		toSerialize["task"] = o.Task
	}
	if o.Agents != nil {
		toSerialize["agents"] = o.Agents
	}
	if o.OverallHealth != nil {
		toSerialize["overallHealth"] = o.OverallHealth
	}
	if o.TargetAgent != nil {
		toSerialize["targetAgent"] = o.TargetAgent
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1TaskHealth struct {
	value *V202101beta1TaskHealth
	isSet bool
}

func (v NullableV202101beta1TaskHealth) Get() *V202101beta1TaskHealth {
	return v.value
}

func (v *NullableV202101beta1TaskHealth) Set(val *V202101beta1TaskHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1TaskHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1TaskHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1TaskHealth(val *V202101beta1TaskHealth) *NullableV202101beta1TaskHealth {
	return &NullableV202101beta1TaskHealth{value: val, isSet: true}
}

func (v NullableV202101beta1TaskHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1TaskHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
