/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1DNS struct for V202101beta1DNS
type V202101beta1DNS struct {
	Name *string `json:"name,omitempty"`
}

// NewV202101beta1DNS instantiates a new V202101beta1DNS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1DNS() *V202101beta1DNS {
	this := V202101beta1DNS{}
	return &this
}

// NewV202101beta1DNSWithDefaults instantiates a new V202101beta1DNS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1DNSWithDefaults() *V202101beta1DNS {
	this := V202101beta1DNS{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V202101beta1DNS) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNS) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V202101beta1DNS) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V202101beta1DNS) SetName(v string) {
	o.Name = &v
}

func (o V202101beta1DNS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1DNS struct {
	value *V202101beta1DNS
	isSet bool
}

func (v NullableV202101beta1DNS) Get() *V202101beta1DNS {
	return v.value
}

func (v *NullableV202101beta1DNS) Set(val *V202101beta1DNS) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1DNS) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1DNS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1DNS(val *V202101beta1DNS) *NullableV202101beta1DNS {
	return &NullableV202101beta1DNS{value: val, isSet: true}
}

func (v NullableV202101beta1DNS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1DNS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
