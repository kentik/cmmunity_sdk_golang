/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1DNSTaskDefinition struct for V202101beta1DNSTaskDefinition
type V202101beta1DNSTaskDefinition struct {
	Target   *string `json:"target,omitempty"`
	Period   *int64  `json:"period,omitempty"`
	Expiry   *int64  `json:"expiry,omitempty"`
	Count    *int64  `json:"count,omitempty"`
	Port     *int64  `json:"port,omitempty"`
	Type     *string `json:"type,omitempty"`
	Resolver *string `json:"resolver,omitempty"`
}

// NewV202101beta1DNSTaskDefinition instantiates a new V202101beta1DNSTaskDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1DNSTaskDefinition() *V202101beta1DNSTaskDefinition {
	this := V202101beta1DNSTaskDefinition{}
	return &this
}

// NewV202101beta1DNSTaskDefinitionWithDefaults instantiates a new V202101beta1DNSTaskDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1DNSTaskDefinitionWithDefaults() *V202101beta1DNSTaskDefinition {
	this := V202101beta1DNSTaskDefinition{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *V202101beta1DNSTaskDefinition) SetTarget(v string) {
	o.Target = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetPeriod() int64 {
	if o == nil || o.Period == nil {
		var ret int64
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetPeriodOk() (*int64, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int64 and assigns it to the Period field.
func (o *V202101beta1DNSTaskDefinition) SetPeriod(v int64) {
	o.Period = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetExpiry() int64 {
	if o == nil || o.Expiry == nil {
		var ret int64
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetExpiryOk() (*int64, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int64 and assigns it to the Expiry field.
func (o *V202101beta1DNSTaskDefinition) SetExpiry(v int64) {
	o.Expiry = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetCount() int64 {
	if o == nil || o.Count == nil {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetCountOk() (*int64, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *V202101beta1DNSTaskDefinition) SetCount(v int64) {
	o.Count = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *V202101beta1DNSTaskDefinition) SetPort(v int64) {
	o.Port = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V202101beta1DNSTaskDefinition) SetType(v string) {
	o.Type = &v
}

// GetResolver returns the Resolver field value if set, zero value otherwise.
func (o *V202101beta1DNSTaskDefinition) GetResolver() string {
	if o == nil || o.Resolver == nil {
		var ret string
		return ret
	}
	return *o.Resolver
}

// GetResolverOk returns a tuple with the Resolver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1DNSTaskDefinition) GetResolverOk() (*string, bool) {
	if o == nil || o.Resolver == nil {
		return nil, false
	}
	return o.Resolver, true
}

// HasResolver returns a boolean if a field has been set.
func (o *V202101beta1DNSTaskDefinition) HasResolver() bool {
	if o != nil && o.Resolver != nil {
		return true
	}

	return false
}

// SetResolver gets a reference to the given string and assigns it to the Resolver field.
func (o *V202101beta1DNSTaskDefinition) SetResolver(v string) {
	o.Resolver = &v
}

func (o V202101beta1DNSTaskDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Resolver != nil {
		toSerialize["resolver"] = o.Resolver
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1DNSTaskDefinition struct {
	value *V202101beta1DNSTaskDefinition
	isSet bool
}

func (v NullableV202101beta1DNSTaskDefinition) Get() *V202101beta1DNSTaskDefinition {
	return v.value
}

func (v *NullableV202101beta1DNSTaskDefinition) Set(val *V202101beta1DNSTaskDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1DNSTaskDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1DNSTaskDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1DNSTaskDefinition(val *V202101beta1DNSTaskDefinition) *NullableV202101beta1DNSTaskDefinition {
	return &NullableV202101beta1DNSTaskDefinition{value: val, isSet: true}
}

func (v NullableV202101beta1DNSTaskDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1DNSTaskDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
