/*
 * Cloud Export Admin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cloudexportstub

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A CloudExportAdminServiceApiController binds http requests to an api service and writes the service results to the http response
type CloudExportAdminServiceApiController struct {
	service CloudExportAdminServiceApiServicer
}

// NewCloudExportAdminServiceApiController creates a default api controller
func NewCloudExportAdminServiceApiController(s CloudExportAdminServiceApiServicer) Router {
	return &CloudExportAdminServiceApiController{service: s}
}

// Routes returns all of the api route for the CloudExportAdminServiceApiController
func (c *CloudExportAdminServiceApiController) Routes() Routes {
	return Routes{
		{
			"CloudExportAdminServiceCreateCloudExport",
			strings.ToUpper("Post"),
			"/cloud_export/v202101beta1/exports",
			c.CloudExportAdminServiceCreateCloudExport,
		},
		{
			"CloudExportAdminServiceDeleteCloudExport",
			strings.ToUpper("Delete"),
			"/cloud_export/v202101beta1/exports/{export.id}",
			c.CloudExportAdminServiceDeleteCloudExport,
		},
		{
			"CloudExportAdminServiceGetCloudExport",
			strings.ToUpper("Get"),
			"/cloud_export/v202101beta1/exports/{export.id}",
			c.CloudExportAdminServiceGetCloudExport,
		},
		{
			"CloudExportAdminServiceListCloudExport",
			strings.ToUpper("Get"),
			"/cloud_export/v202101beta1/exports",
			c.CloudExportAdminServiceListCloudExport,
		},
		{
			"CloudExportAdminServicePatchCloudExport",
			strings.ToUpper("Patch"),
			"/cloud_export/v202101beta1/exports/{export.id}",
			c.CloudExportAdminServicePatchCloudExport,
		},
		{
			"CloudExportAdminServiceUpdateCloudExport",
			strings.ToUpper("Put"),
			"/cloud_export/v202101beta1/exports/{export.id}",
			c.CloudExportAdminServiceUpdateCloudExport,
		},
	}
}

// CloudExportAdminServiceCreateCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServiceCreateCloudExport(w http.ResponseWriter, r *http.Request) {
	v202101beta1CreateCloudExportRequest := &V202101beta1CreateCloudExportRequest{}
	if err := json.NewDecoder(r.Body).Decode(&v202101beta1CreateCloudExportRequest); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	result, err := c.service.CloudExportAdminServiceCreateCloudExport(r.Context(), *v202101beta1CreateCloudExportRequest)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CloudExportAdminServiceDeleteCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServiceDeleteCloudExport(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	exportId := params["export.id"]
	result, err := c.service.CloudExportAdminServiceDeleteCloudExport(r.Context(), exportId)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CloudExportAdminServiceGetCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServiceGetCloudExport(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	exportId := params["export.id"]
	result, err := c.service.CloudExportAdminServiceGetCloudExport(r.Context(), exportId)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CloudExportAdminServiceListCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServiceListCloudExport(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.CloudExportAdminServiceListCloudExport(r.Context())
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CloudExportAdminServicePatchCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServicePatchCloudExport(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	exportId := params["export.id"]
	v202101beta1PatchCloudExportRequest := &V202101beta1PatchCloudExportRequest{}
	if err := json.NewDecoder(r.Body).Decode(&v202101beta1PatchCloudExportRequest); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	result, err := c.service.CloudExportAdminServicePatchCloudExport(r.Context(), exportId, *v202101beta1PatchCloudExportRequest)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CloudExportAdminServiceUpdateCloudExport -
func (c *CloudExportAdminServiceApiController) CloudExportAdminServiceUpdateCloudExport(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	exportId := params["export.id"]
	v202101beta1UpdateCloudExportRequest := &V202101beta1UpdateCloudExportRequest{}
	if err := json.NewDecoder(r.Body).Decode(&v202101beta1UpdateCloudExportRequest); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	result, err := c.service.CloudExportAdminServiceUpdateCloudExport(r.Context(), exportId, *v202101beta1UpdateCloudExportRequest)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
